WDir <- "c:/users/joel/google drive/github/seir/claude_v9"
setwd(WDir)# make it your working directory
source("UtilitiesChunks.R")
source("SEIR.n.Age.Classes and friends.R")
# BEGIN    covid.target = list(donnees= data.frame , time.ranges = data.frame )
target_file= paste0(WDir,"/RE__Update_on_SEIR_model_sensitivity_analysis/CDN covid epi data (cleaner file from file called Comparison with observed data).xls")
target.df =  as.data.frame.from.tbl( readxl::read_excel(target_file, sheet ="Canadian data" ) )
target.df$cumI = target.df$`Cumulative cases`
target.df$D    = target.df$Deaths
covid.targets=list(donnees=target.df[,c("time","cumI","D")] )
covid.targets$time.ranges = data.frame(lower.bound=20 +10*seq(5))
covid.targets$time.ranges$upper.bound = pmin( covid.targets$time.ranges$lower.bound + 9 , 75)
file_name = "BluePrint4 Conceptual model_V4_20200415V2(1agegrp)_SC1 - April23 - MaxTime222.xls"
sheet_names = list(initial.conditions="Initial conditions",parms.1d="Parameters by Age",parms.2d="Parameters by Age x Age",model.flow="Model Specs (not lazy)",auxiliary.vars="Intermediate calculations")
# Example 3) Random attempts
if(TRUE)  # 1 hypercube with
{
# NOTE: this is the only place where you name the parameters
# NOTE: use the parameter name as it appears in the relevant Excel spreadsheet
center = c(Cgg=0.25,Cgq=0.0,lambda=-0.75,sigma=-0.75) # Joel solution 5-8 with Cgq set to 0  (exp(Cgq) = 1).
center = c(Cgg=0   ,Cgq=0  ,lambda=0    ,sigma=0)
half.range = 0.1 + 0*center # small  hypercube
half.range = 0.2 + 0*center # larger hypercube
n.repeat.within.hypercube = 5
n.repeat.within.hypercube = 10
#half.range["beta"] = 0
parm.cloud.grid.specs = list(
hypercube.lower.bounds = as.list( center - half.range ) ,
hypercube.upper.bounds = as.list( center + half.range ) ,
# hypercube.lower.bounds = c(Cgg=0.05,Cgq=-0.4,lambda=-0.75,sigma=-0.75) , # can also spell out bounds
# hypercube.upper.bounds = c(Cgg=0.15,Cgq=-0.1,lambda=-0.25,sigma=-0.45) , # can also spell out bounds
hypercube.apex.mode  = as.list( center + half.range ) ,
n.repeat.within.hypercube = n.repeat.within.hypercube,
LatinHypercubeSampling = c(FALSE,TRUE)[2] ,
racine = 42  ,  # random seed
backend.transformation = exp ,# need to provide a function like exp here
reference.alteration = c("overwrite","add","multiply")[3] ,
tmin.alter.scope = 40:55
)
}
# results.baseline = SEIR.n.Age.Classes(file_name,sheet_names)[c("input.info","input.info.verbatim")] # all you really need
results.baseline = SEIR.n.Age.Classes(file_name,sheet_names)
